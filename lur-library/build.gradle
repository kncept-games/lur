
plugins {
	id 'java-library'
	id 'maven-publish'
    // id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
    id 'signing'
}

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
}

java {
	targetCompatibility = JavaVersion.VERSION_1_7
	sourceCompatibility = JavaVersion.VERSION_1_7
    withJavadocJar()
    withSourcesJar()
}

jar {
	manifest {
		attributes(
			'Implementation-Title': project.name,
			'Implementation-Vendor' : 'kncept',
			'Implementation-Version': project.version,
			'Implementation-Author': 'Nicholas Krul', //non standard
			'Created-By': System.getProperty('java.version'),
			'Built-By': System.getProperty('user.name'),
			'Built-Date': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
			'Source-Compatibility': project.sourceCompatibility,
			'Target-Compatibility': project.targetCompatibility,
			// 'Main-Class': 'none'
		)
	}
}

// task sourcesJar(type: Jar) {
//     archiveClassifier = 'sources'
//     from sourceSets.main.allSource
// }
// task javadocJar(type: Jar) {
//     archiveClassifier = 'javadoc'
//     from javadoc
// }

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

signing {
    // 'no configured signatory'
    // remap for signing.secretKeyRingFile (needs ../)
    // useInMemoryPgpKeys(
    //     project.findProperty("signing.keyId"),
    //     "../" + project.findProperty("signing.secretKeyRingFile"),
    //     project.findProperty("signing.password"))
    sign publishing.publications
}
tasks.withType(Sign) {
    onlyIf("sign if gradle.properties exists") { new File(rootDir, "gradle.properties").exists() }
}

// String username = null
// String password = null
// if (project.hasProperty('ossrhUsername')) {
// 	username = ossrhUsername
//     println("ossrhUsername = ${ossrhUsername}")
// } else println("no ossrhUsername")
// if (project.hasProperty('ossrhPassword')) {
// 	password = ossrhPassword
// }

publishing {
    // if(new File(rootDir, "gradle.properties").exists()) {
    publications {
        mavenjava(MavenPublication) {
            artifactId = 'lur'
            from components.java

            // pom {
			// 	name = 'Kncept LUR'
			// 	description = 'Hex Coordinate System with 2D Utils'
			// 	url = 'https://github.com/kncept-games/lur'
			// 	properties = [
			// 			"corporate.website": "http://kncept.com",
			// 	]
			// 	licenses {
			// 		license {
			// 			name = 'unlicense'
			// 			url = 'https://github.com/kncept-games/lur/blob/main/LICENSE'
			// 		}
			// 	}
			// 	developers {
			// 		developer {
			// 			id = 'nkrul'
			// 			name = 'Nicholas Krul'
			// 			email = 'nicholas.krul@gmail.com'
			// 		}
			// 	}
			// 	scm {
			// 		connection = 'scm:git:git://github.com/kncept-games/lur.git'
			// 		developerConnection = 'scm:git:ssh://github.com/kncept-games/lur.git'
			// 		url = 'https://github.com/kncept-games/lur'
			// 	}
			// }

        }
    }
    repositories {
        maven {
            name = 'OSSRH'
            // url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            url = "https://oss.sonatype.org/service/local/staging1/deploy/maven2/"
            // authentication(userName: username, password: password)
            credentials {
                println("credentials username - " + project.ossrhUsername)
                username = project.ossrhUsername
                password = project.ossrhPassword
            }
        }
    }

    // }
}

nexusPublishing {
    repositories {
        sonatype {
            username = project.ossrhUsername
            password = project.ossrhPassword
        }
    }
}
